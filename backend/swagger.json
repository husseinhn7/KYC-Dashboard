{
    "openapi": "3.0.0",
    "info": {
        "title": "Multi-Region KYC Admin Dashboard API",
        "version": "1.0.0",
        "description": "API documentation for the Multi-Region KYC Admin Dashboard."
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "global_admin",
                            "regional_admin",
                            "sending_partner",
                            "receiving_partner"
                        ]
                    },
                    "region": {
                        "type": "string"
                    }
                }
            },
            "KYCVerification": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ]
                    },
                    "region": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "object",
                        "properties": {
                            "id_front": {
                                "type": "string"
                            },
                            "id_back": {
                                "type": "string"
                            },
                            "proof_of_address": {
                                "type": "string"
                            }
                        }
                    },
                    "notes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/User"
                    },
                    "receiver": {
                        "$ref": "#/components/schemas/User"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "USDC"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "completed",
                            "pending",
                            "failed"
                        ]
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuditLog": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "action": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "success",
                            "failure"
                        ]
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login and get JWT token",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "JWT token and user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "summary": "Get current user info",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/kyc": {
            "get": {
                "summary": "List KYC cases (filtered by role & region)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of KYC cases",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/KYCVerification"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/kyc/{id}": {
            "get": {
                "summary": "Get single KYC case with documents",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "KYC case",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KYCVerification"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/kyc/{id}/approve": {
            "post": {
                "summary": "Approve KYC case (Admins only)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Approved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/kyc/{id}/reject": {
            "post": {
                "summary": "Reject KYC case with reason (Admins only)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rejected"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/kyc/{id}/note": {
            "post": {
                "summary": "Add internal note to KYC case (Admins only)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "note"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Note added"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "List transactions (filtered)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "summary": "Create a transaction (mock logic)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sender": {
                                        "type": "string"
                                    },
                                    "receiver": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "enum": [
                                            "USD",
                                            "USDC"
                                        ]
                                    }
                                },
                                "required": [
                                    "sender",
                                    "receiver",
                                    "amount",
                                    "currency"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/transactions/stats": {
            "get": {
                "summary": "Get transaction stats",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "region",
                        "in": "query",
                        "required": false,  
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {  
                    "200": {
                        "description": "Transaction stats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",   
                                    "properties": {
                                        "totalAmount": {
                                            "type": "number"
                                        },
                                        "totalTransactions": {
                                            "type": "number"
                                        },
                                        "successRate": {
                                            "type": "number"
                                        },
                                        "latestTransactions": {
                                            "type": "array",    
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unsupported currency pair"
                    }
                }
            }
        },
        "/audit-logs": {
            "get": {
                "summary": "Get audit logs (searchable/filterable)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of audit logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AuditLog"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/rates": {
            "get": {
                "summary": "Get conversion rate (mock)",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversion rate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "rate": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unsupported currency pair"
                    }
                }
            }
        }
    }
}